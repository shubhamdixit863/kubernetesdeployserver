
# For replicaset all the meta data field of the pod will move inside spec
apiVersion: apps/v1 #for replicaset make sure its apps/v1
kind: Deployment   #Replicaset kind
metadata:
  name: webapp
spec:
  minReadySeconds: 30 #number of second until when replicaSet is available
  selector: #it will manage all the pods where label matches key value pair app:webapp
    matchLabels:
      app: webapp
  replicas: 2
  template:
    metadata:  # we dont need to gives names to the pod now
      labels:   #this label will be used to identify the pod by service
        app: webapp  #key and value (webapp) should be same as in selector of service

    spec:
      containers:
        - name: webapp
          image: localhost:32000/server:latest  #Docker image for the container
          ports:
            - containerPort: 50051

---


apiVersion: v1
kind: Service
metadata:
  name: grpc-webapp
spec:
  #This defines which pods are going to be represented by this service
  # the service becomes a network endpoint for either or other services
  # or maybe external users to connect to eg browser
  selector:
    app: webapp   # the pod label we want to create service for


  ports:
    - name: http #just a label
      port: 50051   #internal port of the cluster in which pod is running
      nodePort: 30080   # only be user when type is NodePort should be greater than 30000

  type: NodePort
